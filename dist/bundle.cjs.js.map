{"version":3,"file":"bundle.cjs.js","sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\nimport path from 'path';\nimport filePathOneLayer from 'file-path-one-layer';\n\nfunction lift() {\n  /* eslint-disable global-require */\n  /* eslint-disable import/no-dynamic-require */\n  /* eslint max-len: [\"error\", 150] */\n\n  // eslint-disable-next-line no-multi-assign\n  let policies = (this.policies = {});\n  // eslint-disable-next-line no-multi-assign\n  let policiesPath = (this.config.paths.policies = path.join(this.projectPath, 'policies'));\n\n  return filePathOneLayer(policiesPath)\n    .then((files) => {\n      files.forEach((file) => {\n        let config = require(file.path);\n        policies[file.name] = config.default ? config.default : config;\n      });\n    })\n    .then(() => {\n      this.config.controllerActionPolicies = {};\n\n      this.config.policies = this.config.policies || {};\n      let defaultPolicies = this.config.policies['*'] || [];\n\n      _.forEach(this.controllers, (controller, controllerName) => {\n        let controllerPolicies = this.config.policies[controllerName] || {};\n        let defaultControllerPolicies = controllerPolicies['*'] || defaultPolicies;\n        _.forEach(controller, (action, actionName) => {\n          if (_.isFunction(action)) {\n            this.config.controllerActionPolicies[`${controllerName}.${actionName}`] =\n              controllerPolicies[actionName] || defaultControllerPolicies;\n          }\n        });\n      });\n\n      let unknownPolicies = [];\n\n      this.controllerActionPolicies = _.mapValues(\n        this.config.controllerActionPolicies,\n        (policyNames) => {\n          return _.map(policyNames, (policyName) => {\n            let policy = this.policies[policyName];\n            if (!policy) {\n              unknownPolicies.push(policyName);\n            }\n            return policy;\n          });\n        }\n      );\n\n      if (unknownPolicies.length) {\n        return Promise.reject(new Error(`Unknown policy:${unknownPolicies.join(',')}`));\n      }\n\n      return Promise.resolve();\n    });\n}\n\nmodule.exports = lift;\n"],"names":["lift","policies","policiesPath","config","paths","path","join","projectPath","filePathOneLayer","then","files","forEach","file","require","name","default","controllerActionPolicies","defaultPolicies","controllers","controller","controllerName","controllerPolicies","defaultControllerPolicies","action","actionName","_","isFunction","unknownPolicies","mapValues","policyNames","map","policyName","policy","push","length","Promise","reject","Error","resolve","module","exports"],"mappings":";;;;;;;;AAIA,SAASA,IAAT,GAAgB;;;;;;;MAMVC,WAAY,KAAKA,QAAL,GAAgB,EAAhC,CANc;;MAQVC,eAAgB,KAAKC,MAAL,CAAYC,KAAZ,CAAkBH,QAAlB,GAA6BI,KAAKC,IAAL,CAAU,KAAKC,WAAf,EAA4B,UAA5B,CAAjD;SAEOC,iBAAiBN,YAAjB,EACJO,IADI,CACEC,KAAD,IAAW;UACTC,OAAN,CAAeC,IAAD,IAAU;UAClBT,SAASU,QAAQD,KAAKP,IAAb,CAAb;;eACSO,KAAKE,IAAd,IAAsBX,OAAOY,OAAP,GAAiBZ,OAAOY,OAAxB,GAAkCZ,MAAxD;KAFF;GAFG,EAOJM,IAPI,CAOC,MAAM;SACLN,MAAL,CAAYa,wBAAZ,GAAuC,EAAvC;SAEKb,MAAL,CAAYF,QAAZ,GAAuB,KAAKE,MAAL,CAAYF,QAAZ,IAAwB,EAA/C;QACIgB,kBAAkB,KAAKd,MAAL,CAAYF,QAAZ,CAAqB,GAArB,KAA6B,EAAnD;;MAEEU,OAAF,CAAU,KAAKO,WAAf,EAA4B,CAACC,UAAD,EAAaC,cAAb,KAAgC;UACtDC,qBAAqB,KAAKlB,MAAL,CAAYF,QAAZ,CAAqBmB,cAArB,KAAwC,EAAjE;UACIE,4BAA4BD,mBAAmB,GAAnB,KAA2BJ,eAA3D;;QACEN,OAAF,CAAUQ,UAAV,EAAsB,CAACI,MAAD,EAASC,UAAT,KAAwB;YACxCC,EAAEC,UAAF,CAAaH,MAAb,CAAJ,EAA0B;eACnBpB,MAAL,CAAYa,wBAAZ,CAAsC,GAAEI,cAAe,IAAGI,UAAW,EAArE,IACEH,mBAAmBG,UAAnB,KAAkCF,yBADpC;;OAFJ;KAHF;;QAWIK,kBAAkB,EAAtB;SAEKX,wBAAL,GAAgCS,EAAEG,SAAF,CAC9B,KAAKzB,MAAL,CAAYa,wBADkB,EAE7Ba,WAAD,IAAiB;aACRJ,EAAEK,GAAF,CAAMD,WAAN,EAAoBE,UAAD,IAAgB;YACpCC,SAAS,KAAK/B,QAAL,CAAc8B,UAAd,CAAb;;YACI,CAACC,MAAL,EAAa;0BACKC,IAAhB,CAAqBF,UAArB;;;eAEKC,MAAP;OALK,CAAP;KAH4B,CAAhC;;QAaIL,gBAAgBO,MAApB,EAA4B;aACnBC,QAAQC,MAAR,CAAe,IAAIC,KAAJ,CAAW,kBAAiBV,gBAAgBrB,IAAhB,CAAqB,GAArB,CAA0B,EAAtD,CAAf,CAAP;;;WAGK6B,QAAQG,OAAR,EAAP;GA3CG,CAAP;;;AA+CFC,OAAOC,OAAP,GAAiBxC,IAAjB"}