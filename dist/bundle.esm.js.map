{"version":3,"file":"bundle.esm.js","sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\nimport path from 'path';\nimport filePathOneLayer from 'file-path-one-layer';\n\nfunction lift() {\n  /* eslint-disable global-require */\n  /* eslint-disable import/no-dynamic-require */\n  /* eslint max-len: [\"error\", 150] */\n\n  // eslint-disable-next-line no-multi-assign\n  let policies = (this.policies = {});\n  // eslint-disable-next-line no-multi-assign\n  let policiesPath = (this.config.paths.policies = path.join(this.projectPath, 'policies'));\n\n  return filePathOneLayer(policiesPath)\n    .then((files) => {\n      files.forEach((file) => {\n        let config = require(file.path);\n        policies[file.name] = config.default ? config.default : config;\n      });\n    })\n    .then(() => {\n      this.config.controllerActionPolicies = {};\n\n      this.config.policies = this.config.policies || {};\n      let defaultPolicies = this.config.policies['*'] || [];\n\n      _.forEach(this.controllers, (controller, controllerName) => {\n        let controllerPolicies = this.config.policies[controllerName] || {};\n        let defaultControllerPolicies = controllerPolicies['*'] || defaultPolicies;\n        _.forEach(controller, (action, actionName) => {\n          if (_.isFunction(action)) {\n            this.config.controllerActionPolicies[`${controllerName}.${actionName}`] =\n              controllerPolicies[actionName] || defaultControllerPolicies;\n          }\n        });\n      });\n\n      let unknownPolicies = [];\n\n      this.controllerActionPolicies = _.mapValues(\n        this.config.controllerActionPolicies,\n        (policyNames) => {\n          return _.map(policyNames, (policyName) => {\n            let policy = this.policies[policyName];\n            if (!policy) {\n              unknownPolicies.push(policyName);\n            }\n            return policy;\n          });\n        }\n      );\n\n      if (unknownPolicies.length) {\n        return Promise.reject(new Error(`Unknown policy:${unknownPolicies.join(',')}`));\n      }\n\n      return Promise.resolve();\n    });\n}\n\nmodule.exports = lift;\n"],"names":["lift","policies","this","policiesPath","config","paths","path","join","projectPath","filePathOneLayer","then","files","forEach","file","require","name","default","controllerActionPolicies","defaultPolicies","controllers","controller","controllerName","controllerPolicies","defaultControllerPolicies","action","actionName","_","isFunction","unknownPolicies","mapValues","policyNames","map","policyName","policy","push","length","Promise","reject","Error","resolve","module","exports"],"mappings":"+FAIA,SAASA,WAMHC,EAAYC,KAAKD,YAEjBE,EAAgBD,KAAKE,OAAOC,MAAMJ,SAAWK,KAAKC,KAAKL,KAAKM,YAAa,mBAEtEC,iBAAiBN,GACrBO,KAAMC,MACCC,QAASC,QACTT,EAASU,QAAQD,EAAKP,QACjBO,EAAKE,MAAQX,EAAOY,QAAUZ,EAAOY,QAAUZ,MAG3DM,KAAK,UACCN,OAAOa,iCAEPb,OAAOH,SAAWC,KAAKE,OAAOH,iBAC/BiB,EAAkBhB,KAAKE,OAAOH,SAAS,WAEzCW,QAAQV,KAAKiB,YAAa,CAACC,EAAYC,SACnCC,EAAqBpB,KAAKE,OAAOH,SAASoB,OAC1CE,EAA4BD,EAAmB,MAAQJ,IACzDN,QAAQQ,EAAY,CAACI,EAAQC,KACzBC,EAAEC,WAAWH,UACVpB,OAAOa,4BAA4BI,KAAkBI,KACxDH,EAAmBG,IAAeF,WAKtCK,iBAECX,yBAA2BS,EAAEG,UAChC3B,KAAKE,OAAOa,yBACXa,GACQJ,EAAEK,IAAID,EAAcE,QACrBC,EAAS/B,KAAKD,SAAS+B,UACtBC,KACaC,KAAKF,GAEhBC,KAKTL,EAAgBO,OACXC,QAAQC,OAAO,IAAIC,wBAAwBV,EAAgBrB,KAAK,SAGlE6B,QAAQG,YAIrBC,OAAOC,QAAUzC"}